{
  "name": "netbird",
  "displayName": "netbird",
  "version": "0.1.0",
  "description": "Manage NetBird resources declaratively using Pulumi's infrastructure-as-code framework.",
  "keywords": [
    "category/networking",
    "category/security",
    "kind/native"
  ],
  "homepage": "https://pulumi.com",
  "license": "AGPL-3.0",
  "repository": "https://github.com/mbrav/pulumi-netbird",
  "logoUrl": "https://raw.githubusercontent.com/mbrav/pulumi-netbird/master/assets/logo.webp",
  "pluginDownloadURL": "github://api.github.com/mbrav/pulumi-netbird",
  "publisher": "mbrav",
  "namespace": "pulumi",
  "meta": {
    "moduleFormat": "(.*)"
  },
  "language": {
    "csharp": {
      "packageReferences": {
        "Pulumi": "3.*"
      }
    },
    "go": {
      "generateResourceContainerTypes": true,
      "importBasePath": "github.com/mbrav/pulumi-netbird/sdk/go/netbird",
      "respectSchemaVersion": true
    },
    "java": {
      "buildFiles": "gradle",
      "dependencies": {
        "com.pulumi:pulumi": "1.10.0"
      },
      "gradleNexusPublishPluginVersion": "2.0.0"
    },
    "nodejs": {
      "dependencies": {
        "@pulumi/pulumi": "^3.0.0"
      },
      "packageName": "@mbrav/pulumi-netbird"
    },
    "python": {
      "pyproject": {
        "enabled": true
      },
      "requires": {
        "pulumi": "\u003e=3.0.0,\u003c4.0.0"
      },
      "respectSchemaVersion": true
    }
  },
  "config": {
    "variables": {
      "token": {
        "type": "string",
        "description": "Netbird API Token",
        "default": "",
        "defaultInfo": {
          "environment": [
            "NETBIRD_TOKEN"
          ]
        },
        "secret": true
      },
      "url": {
        "type": "string",
        "description": "URL to Netbird API, example: https://api.netbird.io",
        "default": "https://api.netbird.io",
        "defaultInfo": {
          "environment": [
            "NETBIRD_URL"
          ]
        }
      }
    },
    "defaults": [
      "token",
      "url"
    ]
  },
  "types": {
    "netbird:resource:Nameserver": {
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP of Nameserver"
        },
        "port": {
          "type": "integer",
          "description": "Port Nameserver Port"
        },
        "type": {
          "$ref": "#/types/netbird:resource:NameserverNsType",
          "description": "NsType Nameserver Type"
        }
      },
      "type": "object",
      "required": [
        "ip",
        "port",
        "type"
      ]
    },
    "netbird:resource:NameserverNsType": {
      "type": "string",
      "enum": [
        {
          "description": "UDP type",
          "value": "udp"
        }
      ]
    },
    "netbird:resource:PolicyRuleArgs": {
      "properties": {
        "action": {
          "$ref": "#/types/netbird:resource:RuleAction",
          "description": "Action Policy rule accept or drops packets"
        },
        "bidirectional": {
          "type": "boolean",
          "description": "Bidirectional Define if the rule is applicable in both directions, sources, and destinations."
        },
        "description": {
          "type": "string",
          "description": "Description Policy rule friendly description"
        },
        "destinationResource": {
          "$ref": "#/types/netbird:resource:Resource",
          "description": "DestinationResource for the rule "
        },
        "destinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Destinations Policy rule destination group IDs"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled Policy rule status"
        },
        "id": {
          "type": "string",
          "description": "ID Policy rule."
        },
        "name": {
          "type": "string",
          "description": "Name Policy rule name identifier"
        },
        "portRanges": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:RulePortRange"
          },
          "description": "PortRanges Policy rule affected ports ranges list"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ports Policy rule affected ports"
        },
        "protocol": {
          "$ref": "#/types/netbird:resource:Protocol",
          "description": "Protocol Policy rule type of the traffic"
        },
        "sourceResource": {
          "$ref": "#/types/netbird:resource:Resource",
          "description": "SourceResource for the rule"
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Sources Policy rule source group IDs"
        }
      },
      "type": "object",
      "required": [
        "action",
        "bidirectional",
        "enabled",
        "name",
        "protocol"
      ]
    },
    "netbird:resource:PolicyRuleState": {
      "properties": {
        "action": {
          "$ref": "#/types/netbird:resource:RuleAction",
          "description": "Action Policy rule accept or drops packets"
        },
        "bidirectional": {
          "type": "boolean",
          "description": "Bidirectional Define if the rule is applicable in both directions, sources, and destinations."
        },
        "description": {
          "type": "string",
          "description": "Description Policy rule friendly description"
        },
        "destinationResource": {
          "$ref": "#/types/netbird:resource:Resource",
          "description": "DestinationResource for the rule "
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:RuleGroup"
          },
          "description": "Destinations Policy rule destination group IDs"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled Policy rule status"
        },
        "id": {
          "type": "string",
          "description": "ID Policy rule."
        },
        "name": {
          "type": "string",
          "description": "Name Policy rule name identifier"
        },
        "portRanges": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:RulePortRange"
          },
          "description": "PortRanges Policy rule affected ports ranges list"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ports Policy rule affected ports"
        },
        "protocol": {
          "$ref": "#/types/netbird:resource:Protocol",
          "description": "Protocol Policy rule type of the traffic"
        },
        "sourceResource": {
          "$ref": "#/types/netbird:resource:Resource",
          "description": "SourceResource for the rule"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:RuleGroup"
          },
          "description": "Sources Policy rule source group IDs"
        }
      },
      "type": "object",
      "required": [
        "action",
        "bidirectional",
        "enabled",
        "name",
        "protocol"
      ]
    },
    "netbird:resource:Protocol": {
      "type": "string",
      "enum": [
        {
          "description": "All protocols",
          "value": "all"
        },
        {
          "description": "ICMP protocol",
          "value": "icmp"
        },
        {
          "description": "TCP protocol",
          "value": "tcp"
        },
        {
          "description": "UDP protocol",
          "value": "udp"
        }
      ]
    },
    "netbird:resource:Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the resource."
        },
        "type": {
          "$ref": "#/types/netbird:resource:Type",
          "description": "The type of resource: 'domain', 'host', or 'subnet'."
        }
      },
      "type": "object",
      "required": [
        "id",
        "type"
      ]
    },
    "netbird:resource:RuleAction": {
      "type": "string",
      "enum": [
        {
          "description": "Accept action",
          "value": "accept"
        },
        {
          "description": "Drop action",
          "value": "drop"
        }
      ]
    },
    "netbird:resource:RuleGroup": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the group."
        },
        "name": {
          "type": "string",
          "description": "The name of the group."
        }
      },
      "type": "object",
      "required": [
        "id",
        "name"
      ]
    },
    "netbird:resource:RulePortRange": {
      "properties": {
        "end": {
          "type": "integer",
          "description": "End of port range"
        },
        "start": {
          "type": "integer",
          "description": "Start of port range"
        }
      },
      "type": "object",
      "required": [
        "end",
        "start"
      ]
    },
    "netbird:resource:Type": {
      "type": "string",
      "enum": [
        {
          "description": "A domain resource (e.g., example.com).",
          "value": "domain"
        },
        {
          "description": "A host resource (e.g., peer or device).",
          "value": "host"
        },
        {
          "description": "A subnet resource (e.g., 192.168.0.0/24).",
          "value": "subnet"
        }
      ]
    }
  },
  "provider": {
    "properties": {
      "token": {
        "type": "string",
        "description": "Netbird API Token",
        "default": "",
        "defaultInfo": {
          "environment": [
            "NETBIRD_TOKEN"
          ]
        },
        "secret": true
      },
      "url": {
        "type": "string",
        "description": "URL to Netbird API, example: https://api.netbird.io",
        "default": "https://api.netbird.io",
        "defaultInfo": {
          "environment": [
            "NETBIRD_URL"
          ]
        }
      }
    },
    "type": "object",
    "required": [
      "token",
      "url"
    ],
    "inputProperties": {
      "token": {
        "type": "string",
        "description": "Netbird API Token",
        "default": "",
        "defaultInfo": {
          "environment": [
            "NETBIRD_TOKEN"
          ]
        },
        "secret": true
      },
      "url": {
        "type": "string",
        "description": "URL to Netbird API, example: https://api.netbird.io",
        "default": "https://api.netbird.io",
        "defaultInfo": {
          "environment": [
            "NETBIRD_URL"
          ]
        }
      }
    },
    "requiredInputs": [
      "token",
      "url"
    ]
  },
  "resources": {
    "netbird:resource:DNS": {
      "description": "A NetBird network.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the nameserver group"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Domains Match domain list. It should be empty only if primary is true."
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled Nameserver group status"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Groups Distribution group IDs that defines group of peers that will use this nameserver group"
        },
        "name": {
          "type": "string",
          "description": "Name of nameserver group name"
        },
        "nameservers": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:Nameserver"
          },
          "description": "Nameservers Nameserver list"
        },
        "primary": {
          "type": "boolean",
          "description": "Primary Defines if a nameserver group is primary that resolves all domains. It should be true only if domains list is empty."
        },
        "search_domains_enabled": {
          "type": "boolean",
          "description": "SearchDomainsEnabled Search domain status for match domains. It should be true only if domains list is not empty."
        }
      },
      "type": "object",
      "required": [
        "description",
        "domains",
        "enabled",
        "groups",
        "name",
        "nameservers",
        "primary",
        "search_domains_enabled"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Description of the nameserver group"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Domains Match domain list. It should be empty only if primary is true."
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled Nameserver group status"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Groups Distribution group IDs that defines group of peers that will use this nameserver group"
        },
        "name": {
          "type": "string",
          "description": "Name of nameserver group name"
        },
        "nameservers": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:Nameserver"
          },
          "description": "Nameservers Nameserver list"
        },
        "primary": {
          "type": "boolean",
          "description": "Primary Defines if a nameserver group is primary that resolves all domains. It should be true only if domains list is empty."
        },
        "search_domains_enabled": {
          "type": "boolean",
          "description": "SearchDomainsEnabled Search domain status for match domains. It should be true only if domains list is not empty."
        }
      },
      "requiredInputs": [
        "description",
        "domains",
        "enabled",
        "groups",
        "name",
        "nameservers",
        "primary",
        "search_domains_enabled"
      ]
    },
    "netbird:resource:Group": {
      "description": "A NetBird group, which represents a collection of peers.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the NetBird group."
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An optional list of peer IDs associated with this group."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:Resource"
          },
          "description": "An optional list of resources to associate with this group."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "inputProperties": {
        "name": {
          "type": "string",
          "description": "The name of the NetBird group."
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An optional list of peer IDs to associate with this group."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:Resource"
          },
          "description": "An optional list of resources to associate with this group."
        }
      },
      "requiredInputs": [
        "name"
      ]
    },
    "netbird:resource:Network": {
      "description": "A NetBird network.",
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional description of the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the NetBird network."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "An optional description of the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the NetBird network."
        }
      },
      "requiredInputs": [
        "name"
      ]
    },
    "netbird:resource:NetworkResource": {
      "description": "A NetBird network resource, such as a CIDR range assigned to the network.",
      "properties": {
        "address": {
          "type": "string",
          "description": "CIDR or IP address block assigned to the resource."
        },
        "description": {
          "type": "string",
          "description": "Optional description of the resource."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the resource is enabled."
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of group IDs associated with this resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the network resource."
        },
        "network_id": {
          "type": "string",
          "description": "ID of the network this resource belongs to."
        }
      },
      "type": "object",
      "required": [
        "address",
        "enabled",
        "group_ids",
        "name",
        "network_id"
      ],
      "inputProperties": {
        "address": {
          "type": "string",
          "description": "CIDR or IP address block assigned to the resource."
        },
        "description": {
          "type": "string",
          "description": "Optional description of the resource."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the resource is enabled."
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of group IDs associated with this resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the network resource."
        },
        "network_id": {
          "type": "string",
          "description": "ID of the network this resource belongs to."
        }
      },
      "requiredInputs": [
        "address",
        "enabled",
        "group_ids",
        "name",
        "network_id"
      ]
    },
    "netbird:resource:NetworkRouter": {
      "description": "A NetBird network router resource.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the router is enabled."
        },
        "masquerade": {
          "type": "boolean",
          "description": "Whether masquerading is enabled."
        },
        "metric": {
          "type": "integer",
          "description": "Routing metric value."
        },
        "network_id": {
          "type": "string",
          "description": "ID of the network this router belongs to."
        },
        "peer": {
          "type": "string",
          "description": "Optional peer ID associated with this router."
        },
        "peer_groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional list of peer group IDs associated with this router."
        }
      },
      "type": "object",
      "required": [
        "enabled",
        "masquerade",
        "metric",
        "network_id"
      ],
      "inputProperties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the router is enabled."
        },
        "masquerade": {
          "type": "boolean",
          "description": "Whether masquerading is enabled."
        },
        "metric": {
          "type": "integer",
          "description": "Routing metric value."
        },
        "network_id": {
          "type": "string",
          "description": "ID of the network this router belongs to."
        },
        "peer": {
          "type": "string",
          "description": "Optional peer ID associated with this router."
        },
        "peer_groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional list of peer group IDs associated with this router."
        }
      },
      "requiredInputs": [
        "enabled",
        "masquerade",
        "metric",
        "network_id"
      ]
    },
    "netbird:resource:Peer": {
      "description": "A NetBird peer representing a connected device.",
      "properties": {
        "approvalRequired": {
          "type": "boolean",
          "deprecationMessage": "Cloud only, not maintained in this provider"
        },
        "inactivityExpirationEnabled": {
          "type": "boolean",
          "description": "Whether Inactivity Expiration is enabled."
        },
        "loginExpirationEnabled": {
          "type": "boolean",
          "description": "Whether Login Expiration is enabled."
        },
        "name": {
          "type": "string",
          "description": "The name of the peer."
        },
        "sshEnabled": {
          "type": "boolean",
          "description": "Whether SSH is enabled."
        }
      },
      "type": "object",
      "required": [
        "approvalRequired",
        "inactivityExpirationEnabled",
        "loginExpirationEnabled",
        "name",
        "sshEnabled"
      ],
      "inputProperties": {
        "approvalRequired": {
          "type": "boolean",
          "deprecationMessage": "Cloud only, not maintained in this provider"
        },
        "inactivityExpirationEnabled": {
          "type": "boolean",
          "description": "Whether Inactivity Expiration is enabled."
        },
        "loginExpirationEnabled": {
          "type": "boolean",
          "description": "Whether Login Expiration is enabled."
        },
        "name": {
          "type": "string",
          "description": "The name of the peer."
        },
        "sshEnabled": {
          "type": "boolean",
          "description": "Whether SSH is enabled."
        }
      },
      "requiredInputs": [
        "approvalRequired",
        "inactivityExpirationEnabled",
        "loginExpirationEnabled",
        "name",
        "sshEnabled"
      ]
    },
    "netbird:resource:Policy": {
      "description": "A NetBird policy defining rules for communication between peers.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description Policy friendly description, optional"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled Policy status"
        },
        "name": {
          "type": "string",
          "description": "Name Policy name identifier"
        },
        "posture_checks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "SourcePostureChecks Posture checks ID's applied to policy source groups, optional"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:PolicyRuleState"
          },
          "description": "Rules Policy rule object for policy UI editor"
        }
      },
      "type": "object",
      "required": [
        "enabled",
        "name",
        "rules"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Description Policy friendly description, optional"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled Policy status"
        },
        "name": {
          "type": "string",
          "description": "Name Policy name identifier"
        },
        "posture_checks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "SourcePostureChecks Posture checks ID's applied to policy source groups, optional"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/types/netbird:resource:PolicyRuleArgs"
          },
          "description": "Rules Policy rule object for policy UI editor"
        }
      },
      "requiredInputs": [
        "enabled",
        "name",
        "rules"
      ]
    },
    "netbird:resource:User": {
      "description": "A NetBird user that receives an invite and is optionally assigned groups and roles.",
      "properties": {
        "autoGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Groups this user’s peers are automatically assigned to."
        },
        "blocked": {
          "type": "boolean",
          "description": "Indicates whether the user is blocked from accessing the system"
        },
        "email": {
          "type": "string",
          "description": "Email address of the user."
        },
        "isServiceUser": {
          "type": "boolean",
          "description": "Whether this user is a service identity."
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "role": {
          "type": "string",
          "description": "NetBird account role assigned to the user."
        }
      },
      "type": "object",
      "required": [
        "autoGroups",
        "blocked",
        "email",
        "isServiceUser",
        "name",
        "role"
      ],
      "inputProperties": {
        "auto_groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of group IDs to auto-assign this user’s peers to."
        },
        "blocked": {
          "type": "boolean",
          "description": "Indicates whether the user is blocked from accessing the system. Used only on update, not create."
        },
        "email": {
          "type": "string",
          "description": "Email address to send user invite to."
        },
        "is_service_user": {
          "type": "boolean",
          "description": "Whether this user is a service identity."
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "role": {
          "type": "string",
          "description": "NetBird account role (e.g., 'admin', 'user')."
        }
      },
      "requiredInputs": [
        "auto_groups",
        "blocked",
        "email",
        "is_service_user",
        "name",
        "role"
      ]
    }
  }
}
